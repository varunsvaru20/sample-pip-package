name: Python application
on:
  push:
    branches:
      - main
jobs:
  deploy-lambda:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine boto3
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Assume Role and Set Temporary Credentials
        run: |
          ROLE_ARN="arn:aws:iam::022499047781:role/RepositoryPublisherRole"
          SESSION_NAME="GitHubActionSession"
          
          # Assume the role
          ASSUME_ROLE_OUTPUT=$(aws sts assume-role --role-arn $ROLE_ARN --role-session-name $SESSION_NAME)
          
          # Extract temporary credentials
          export AWS_ACCESS_KEY_ID=$(echo $ASSUME_ROLE_OUTPUT | jq -r '.Credentials.AccessKeyId')
          export AWS_SECRET_ACCESS_KEY=$(echo $ASSUME_ROLE_OUTPUT | jq -r '.Credentials.SecretAccessKey')
          export AWS_SESSION_TOKEN=$(echo $ASSUME_ROLE_OUTPUT | jq -r '.Credentials.SessionToken')
          
          # Verify credentials are set
          aws sts get-caller-identity
      - name: Build and Publish to CodeArtifact
        run: |
          DOMAIN="annalect"
          DOMAIN_OWNER="022499047781"
          REPO_NAME="my-python-repo"
          
          # Get authorization token and repository endpoint
          export TWINE_USERNAME="aws"
          export TWINE_PASSWORD=$(aws codeartifact get-authorization-token --domain $DOMAIN --domain-owner $DOMAIN_OWNER --query authorizationToken --output text)
          export TWINE_REPOSITORY_URL=$(aws codeartifact get-repository-endpoint --domain $DOMAIN --domain-owner $DOMAIN_OWNER --repository $REPO_NAME --format pypi --query repositoryEndpoint --output text)
          
          # Build and publish package
          python setup.py sdist bdist_wheel
          twine upload dist/*
